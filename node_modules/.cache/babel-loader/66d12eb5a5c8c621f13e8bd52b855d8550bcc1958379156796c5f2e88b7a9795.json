{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan_9mx9tzb\\\\Downloads\\\\SDcONCERT\\\\sdconcert\\\\src\\\\CountDown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CountDown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountDown(_ref) {\n  _s();\n  let {\n    date,\n    image\n  } = _ref;\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [showImage, setShowImage] = useState(false);\n  useEffect(() => {\n    const fetchCurrentTime = async () => {\n      try {\n        const response = await fetch('https://timezone.abstractapi.com/v1/current_time/?api_key=230b60716c454170a8e31c621ba6d9fc&location=Oxford,%20United%20Kingdom');\n        const data = await response.json();\n        const apiTime = new Date(data.datetime);\n        const now = new Date().getTime();\n        const distance = date.getTime() - now + apiTime.getTime(); // Ajusta la diferencia sumando la hora de la API.\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        setTimeLeft(prevState => ({\n          ...prevState,\n          days,\n          hours,\n          minutes,\n          seconds\n        }));\n        if (days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0) {\n          setShowImage(true);\n        }\n      } catch (error) {\n        console.error('Error al obtener la hora de la API:', error);\n      }\n    };\n    const interval = setInterval(fetchCurrentTime, 1000);\n    return () => clearInterval(interval);\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeLeft !== null && timeLeft.days >= 0 && (timeLeft.days > 0 || timeLeft.hours > 0 || timeLeft.minutes > 0 || timeLeft.seconds > 0) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"countdown-text\",\n      children: [timeLeft.days, \" d\\xEDas, \", timeLeft.hours, \" horas, \", timeLeft.minutes, \" minutos, \", timeLeft.seconds, \" segundos para el evento\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : showImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Evento finalizado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(CountDown, \"hpO1g6inyrEmT8bKB8SSAeqAhpA=\");\n_c = CountDown;\nexport default CountDown;\nvar _c;\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountDown","_ref","_s","date","image","timeLeft","setTimeLeft","showImage","setShowImage","fetchCurrentTime","response","fetch","data","json","apiTime","Date","datetime","now","getTime","distance","days","Math","floor","hours","minutes","seconds","prevState","error","console","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/johan_9mx9tzb/Downloads/SDcONCERT/sdconcert/src/CountDown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CountDown.css';\r\n\r\nfunction CountDown({ date, image }) {\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [showImage, setShowImage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentTime = async () => {\r\n      try {\r\n        const response = await fetch('https://timezone.abstractapi.com/v1/current_time/?api_key=230b60716c454170a8e31c621ba6d9fc&location=Oxford,%20United%20Kingdom');\r\n        const data = await response.json();\r\n        const apiTime = new Date(data.datetime);\r\n        const now = new Date().getTime();\r\n        const distance = date.getTime() - now + apiTime.getTime(); // Ajusta la diferencia sumando la hora de la API.\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n        setTimeLeft(prevState => ({ ...prevState, days, hours, minutes, seconds }));\r\n        if (days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0) {\r\n          setShowImage(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener la hora de la API:', error);\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(fetchCurrentTime, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      {timeLeft !== null && timeLeft.days >= 0 && (timeLeft.days > 0 || timeLeft.hours > 0 || timeLeft.minutes > 0 || timeLeft.seconds > 0) ? (\r\n        <p className=\"countdown-text\">{timeLeft.days} d√≠as, {timeLeft.hours} horas, {timeLeft.minutes} minutos, {timeLeft.seconds} segundos para el evento</p>\r\n      ) : (\r\n        showImage && <img src={image} alt=\"Evento finalizado\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountDown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAChC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gIAAgI,CAAC;QAC9J,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClC,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC;QACvC,MAAMC,GAAG,GAAG,IAAIF,IAAI,EAAE,CAACG,OAAO,EAAE;QAChC,MAAMC,QAAQ,GAAGhB,IAAI,CAACe,OAAO,EAAE,GAAGD,GAAG,GAAGH,OAAO,CAACI,OAAO,EAAE,CAAC,CAAC;QAC3D,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACzD,MAAMI,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC/E,MAAMK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;QACvE,MAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;QAC3Db,WAAW,CAACoB,SAAS,KAAK;UAAE,GAAGA,SAAS;UAAEN,IAAI;UAAEG,KAAK;UAAEC,OAAO;UAAEC;QAAQ,CAAC,CAAC,CAAC;QAC3E,IAAIL,IAAI,IAAI,CAAC,IAAIG,KAAK,IAAI,CAAC,IAAIC,OAAO,IAAI,CAAC,IAAIC,OAAO,IAAI,CAAC,EAAE;UAC3DjB,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAED,MAAME,QAAQ,GAAGC,WAAW,CAACrB,gBAAgB,EAAE,IAAI,CAAC;IACpD,OAAO,MAAMsB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAC1B,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IAAAiC,QAAA,EACG3B,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACe,IAAI,IAAI,CAAC,KAAKf,QAAQ,CAACe,IAAI,GAAG,CAAC,IAAIf,QAAQ,CAACkB,KAAK,GAAG,CAAC,IAAIlB,QAAQ,CAACmB,OAAO,GAAG,CAAC,IAAInB,QAAQ,CAACoB,OAAO,GAAG,CAAC,CAAC,gBACnI1B,OAAA;MAAGkC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,GAAE3B,QAAQ,CAACe,IAAI,EAAC,YAAO,EAACf,QAAQ,CAACkB,KAAK,EAAC,UAAQ,EAAClB,QAAQ,CAACmB,OAAO,EAAC,YAAU,EAACnB,QAAQ,CAACoB,OAAO,EAAC,0BAAwB;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,GAEtJ9B,SAAS,iBAAIR,OAAA;MAAKuC,GAAG,EAAElC,KAAM;MAACmC,GAAG,EAAC;IAAmB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACnC,EAAA,CAtCQF,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAwClB,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}