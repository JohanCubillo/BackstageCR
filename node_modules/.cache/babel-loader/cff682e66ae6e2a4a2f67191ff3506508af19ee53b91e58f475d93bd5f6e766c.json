{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan_9mx9tzb\\\\Downloads\\\\SDcONCERT\\\\sdconcert\\\\src\\\\CountDown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CountDown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountDown(_ref) {\n  _s();\n  let {\n    date,\n    image\n  } = _ref;\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [showImage, setShowImage] = useState(false);\n  const [initialTime, setInitialTime] = useState(null);\n  const fetchInitialTime = async () => {\n    try {\n      const response = await fetch('https://timezone.abstractapi.com/v1/current_time/?api_key=230b60716c454170a8e31c621ba6d9fc&location=Oxford,%20United%20Kingdom');\n      const data = await response.json();\n      const apiTime = new Date(data.datetime.replace(' ', 'T'));\n      setInitialTime(apiTime);\n    } catch (error) {\n      console.error('Error al obtener la hora de la API:', error);\n    }\n  };\n  useEffect(() => {\n    fetchInitialTime(); // Obtener la hora inicial al cargar el componente\n\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = date.getTime() - (initialTime ? initialTime.getTime() : now);\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000);\n      setTimeLeft(prevState => ({\n        ...prevState,\n        days,\n        hours,\n        minutes,\n        seconds\n      }));\n      if (days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0) {\n        setShowImage(true);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [date, initialTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeLeft !== null && timeLeft.days >= 0 && (timeLeft.days > 0 || timeLeft.hours > 0 || timeLeft.minutes > 0 || timeLeft.seconds > 0) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"countdown-text\",\n      children: [timeLeft.days, \" d\\xEDas, \", timeLeft.hours, \" horas, \", timeLeft.minutes, \" minutos, \", timeLeft.seconds, \" segundos para el evento\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : showImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Evento finalizado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CountDown, \"3SBVrKF4etFEaJgE4Y5uogXRrDs=\");\n_c = CountDown;\nexport default CountDown;\nvar _c;\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountDown","_ref","_s","date","image","timeLeft","setTimeLeft","showImage","setShowImage","initialTime","setInitialTime","fetchInitialTime","response","fetch","data","json","apiTime","Date","datetime","replace","error","console","interval","setInterval","now","getTime","distance","days","Math","floor","hours","minutes","seconds","prevState","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/johan_9mx9tzb/Downloads/SDcONCERT/sdconcert/src/CountDown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CountDown.css';\r\n\r\nfunction CountDown({ date, image }) {\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [showImage, setShowImage] = useState(false);\r\n  const [initialTime, setInitialTime] = useState(null);\r\n\r\n  const fetchInitialTime = async () => {\r\n    try {\r\n      const response = await fetch('https://timezone.abstractapi.com/v1/current_time/?api_key=230b60716c454170a8e31c621ba6d9fc&location=Oxford,%20United%20Kingdom');\r\n      const data = await response.json();\r\n      const apiTime = new Date(data.datetime.replace(' ', 'T'));\r\n      setInitialTime(apiTime);\r\n    } catch (error) {\r\n      console.error('Error al obtener la hora de la API:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInitialTime(); // Obtener la hora inicial al cargar el componente\r\n\r\n    const interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = date.getTime() - (initialTime ? initialTime.getTime() : now);\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n      setTimeLeft(prevState => ({ ...prevState, days, hours, minutes, seconds }));\r\n      if (days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0) {\r\n        setShowImage(true);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [date, initialTime]);\r\n\r\n  return (\r\n    <div>\r\n      {timeLeft !== null && timeLeft.days >= 0 && (timeLeft.days > 0 || timeLeft.hours > 0 || timeLeft.minutes > 0 || timeLeft.seconds > 0) ? (\r\n        <p className=\"countdown-text\">{timeLeft.days} d√≠as, {timeLeft.hours} horas, {timeLeft.minutes} minutos, {timeLeft.seconds} segundos para el evento</p>\r\n      ) : (\r\n        showImage && <img src={image} alt=\"Evento finalizado\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountDown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}